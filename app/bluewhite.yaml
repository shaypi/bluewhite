apiVersion: apps/v1
kind: Deployment
metadata:
  name: bluewhite-deployment
  namespace: bluewhite
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bluewhite
  template:
    metadata:
      labels:
        app: bluewhite
    spec:
      nodeSelector:
        env: bluewhite
      containers:
        - name: bluewhite
          image: 160213321344.dkr.ecr.eu-west-1.amazonaws.com/bluewhite:bluewhite-5361134170
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "0.5"
              memory: "512Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: bluewhite
  namespace: bluewhite
spec:
  selector:
    app: bluewhite
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bluewhite-ingress
  namespace: bluewhite
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '7'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/target-type: ip
  labels:
    app.kubernetes.io/name: bluewhite
    app: bluewhite
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bluewhite
                port:
                  number: 80
